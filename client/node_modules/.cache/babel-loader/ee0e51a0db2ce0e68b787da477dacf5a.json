{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team-12\\\\client\\\\src\\\\components\\\\Jobs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Job from \"./Job\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Jobs = _ref => {\n  _s();\n\n  let {\n    data,\n    setKeywords,\n    keywords\n  } = _ref;\n  // console.log(data);\n  const [filteredData, setfilteredData] = useState([]); // const SearchFunc = () => {\n  //   if (keywords.length > 0) {\n  //     const newData = filteredData.filter((d) => {\n  //       return d.position.toLocaleLowerCase().includes(keywords);\n  //     });\n  //     setfilteredData(newData);\n  //   } else {\n  //     setfilteredData(data);\n  //   }\n  // };\n\n  const modifiedData = () => {\n    if (keywords) {\n      const newData = data.filter(d => {\n        return keywords.every(key => {\n          return d.role === key || d.level === key || d.languages.includes(key) || d.tools.includes(key);\n        });\n      });\n      setfilteredData(newData);\n    } else {\n      setfilteredData(data);\n    }\n  };\n\n  useEffect(() => {\n    modifiedData(); // SearchFunc();\n  }, [keywords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs\",\n    children: filteredData.map(d => {\n      return /*#__PURE__*/_jsxDEV(Job, {\n        data: d,\n        setkeywords: setKeywords\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jobs, \"jtkzpgCQV4BviQgmEdjrD6ENfjU=\");\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["D:/Team-12/client/src/components/Jobs.jsx"],"names":["React","useEffect","useState","Job","Jobs","data","setKeywords","keywords","filteredData","setfilteredData","modifiedData","newData","filter","d","every","key","role","level","languages","includes","tools","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,IAAI,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,GAAoC;AAChD;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD,CAFgD,CAIhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACvB,QAAIH,QAAJ,EAAc;AACd,YAAMI,OAAO,GAAGN,IAAI,CAACO,MAAL,CAAaC,CAAD,IAAO;AACjC,eAAON,QAAQ,CAACO,KAAT,CAAgBC,GAAD,IAAS;AAC7B,iBACEF,CAAC,CAACG,IAAF,KAAWD,GAAX,IACAF,CAAC,CAACI,KAAF,KAAYF,GADZ,IAEAF,CAAC,CAACK,SAAF,CAAYC,QAAZ,CAAqBJ,GAArB,CAFA,IAGAF,CAAC,CAACO,KAAF,CAAQD,QAAR,CAAiBJ,GAAjB,CAJF;AAMD,SAPM,CAAP;AAQD,OATe,CAAhB;AAUAN,MAAAA,eAAe,CAACE,OAAD,CAAf;AACD,KAZC,MAYK;AACLF,MAAAA,eAAe,CAACJ,IAAD,CAAf;AACD;AACF,GAhBD;;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,GADE,CAEd;AACD,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGC,YAAY,CAACa,GAAb,CAAkBR,CAAD,IAAO;AACvB,0BAAO,QAAC,GAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,WAAW,EAAEP;AAAtC,SAAUO,CAAC,CAACS,EAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;GAAMlB,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Job from \"./Job\";\r\n\r\nconst Jobs = ({ data, setKeywords, keywords }) => {\r\n  // console.log(data);\r\n  const [filteredData, setfilteredData] = useState([]);\r\n\r\n  // const SearchFunc = () => {\r\n  //   if (keywords.length > 0) {\r\n  //     const newData = filteredData.filter((d) => {\r\n  //       return d.position.toLocaleLowerCase().includes(keywords);\r\n  //     });\r\n  //     setfilteredData(newData);\r\n  //   } else {\r\n  //     setfilteredData(data);\r\n  //   }\r\n  // };\r\n\r\n  const modifiedData = () => {\r\n      if (keywords) {\r\n      const newData = data.filter((d) => {\r\n        return keywords.every((key) => {\r\n          return (\r\n            d.role === key ||\r\n            d.level === key ||\r\n            d.languages.includes(key) ||\r\n            d.tools.includes(key)\r\n          );\r\n        });\r\n      });\r\n      setfilteredData(newData);\r\n    } else {\r\n      setfilteredData(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    modifiedData();\r\n    // SearchFunc();\r\n  }, [keywords]);\r\n\r\n  return (\r\n    <div className=\"jobs\">\r\n      {filteredData.map((d) => {\r\n        return <Job key={d.id} data={d} setkeywords={setKeywords} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;"]},"metadata":{},"sourceType":"module"}